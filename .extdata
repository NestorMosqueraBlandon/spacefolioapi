
        // const requestOptionsToken = {
        //   method: 'GET',
        //   uri: `https://api.etherscan.io/api?module=account&action=txlist&address=${portfolio.wallets[1].address}&startblock=0&endblock=9999999&page=1&offset=10&sort=asc&apikey=PM9FSGD1K2AIR9ZMPUKJWVPED5EV1P9QY3`,
        //   qs: {
        //     'start': '1',
        //     'limit': '5000',

        //   },
        //   // headers: {
        //   //   'X-CMC_PRO_API_KEY': '91f97ef8-bc4e-40f9-9d20-7e7e67af1776'
        //   // },
        //   json: true,
        //   gzip: true
        // };

 
        // const url = "https://graphql.bitquery.io/";
        // const opts = {
        //   method: "POST",
        //   headers: {
        //     "Content-Type": "application/json",
        //     "X-API-KEY": "BQYmmb3rW726zLmxE3Fd5aMSyr7AtWT5"
        //   },
        //   body: JSON.stringify({
        //     query
        //   })
        // };
        // fetch(url, opts)
        //   .then(res => res.json())
        //   .then(console.log)
        //   .catch(console.error);



      //   async createWallet(
      //     _,
      //     { name, image, network },
      // ) {
      //     try {
      //         const newWallet = new Exchange({
      //             name,
      //             network,
      //             image,
      //         });
    
      //         await newWallet.save();
    
      //         return 200;
      //     } catch (err) {
      //         return err;
      //     }
      // },


        // createWallet(name: String, image: String, network:String): String







        wallets.map((wallet) => {

                metadata = {
                  balance: wallet.totalQuantity,
                  cryptos: []
                }
    
                walletCryptos = [...wallet.totalTokens.map((token) => {
                  // console.log(token.currency)
                  for (let i = 0; i < data.length; i++) {
                    if (token.currency.symbol) {
                      if (token.currency.symbol.toString().toLowerCase() == data[i].symbol) {
                        // console.log(data[i].name)
                        token.image = data[i].image
                        // console.log(convertValue(Number(token.value),s token.currency.symbol))
                        // token.quantity = token.currency.valueMarket != null && token.value != null? Number(token.value) / Number(token.currency.valueMarket) : 0
    
                        // convertValue(Number(data[i].current_price), token.currency.symbol)
                        token.currency.valueMarket = data[i].current_price != null && token.currency.symbol != null ? data[i].current_price : 0
                        if (token.currency.valueMarket) {
                          // console.log(convertValue(token.value, token.currency.symbol));
                          token.value = convertValue(Number(token.quantity), token.currency.symbol)
                          token.quantity = quantityMarket(token.value, token.currency.valueMarket)
    
                          // coinMarket(token.currency.symbol)
                          // token.value1y = coinMarket(token.currency.symbol)[0]? coinMarket(token.currency.symbol)[0] : 1 ;  
    
    
                          // const cm = coinMarket("bitcoin");
    
                          // const convalue = cm.then(function (result) {
                          //   return result
                          // })
    
                          // console.log("Conva", convalue)
                          // token.value1y = Number(token.currency.valueMarket) / convalue;
                        }
    
                      }
                    }
                  }
                  return token
                })]
              })




              